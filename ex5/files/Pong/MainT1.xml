<tokens>
<symbol> / </symbol>
<symbol> / </symbol>
<identifier> This </identifier>
<identifier> file </identifier>
<identifier> is </identifier>
<identifier> part </identifier>
<identifier> of </identifier>
<identifier> www </identifier>
<symbol> . </symbol>
<identifier> nand2tetris </identifier>
<symbol> . </symbol>
<identifier> org </identifier>
<symbol> / </symbol>
<symbol> / </symbol>
<identifier> and </identifier>
<identifier> the </identifier>
<identifier> book </identifier>
<stringConstant> The Elements of Computing Systems </stringConstant>
<symbol> / </symbol>
<symbol> / </symbol>
<identifier> by </identifier>
<identifier> Nisan </identifier>
<identifier> and </identifier>
<identifier> Schocken </identifier>
<symbol> , </symbol>
<identifier> MIT </identifier>
<identifier> Press </identifier>
<symbol> . </symbol>
<symbol> / </symbol>
<symbol> / </symbol>
<identifier> File </identifier>
<identifier> name </identifier>
<identifier> : </identifier>
<identifier> projects </identifier>
<symbol> / </symbol>
<integerConstant> 11 </integerConstant>
<symbol> / </symbol>
<identifier> Pong </identifier>
<symbol> / </symbol>
<identifier> Main </identifier>
<symbol> . </symbol>
<identifier> jack </identifier>
<symbol> / </symbol>
<symbol> * </symbol>
<symbol> * </symbol>
<symbol> * </symbol>
<identifier> The </identifier>
<identifier> main </identifier>
<keyword> class </keyword>
<identifier> of </identifier>
<identifier> the </identifier>
<identifier> Pong </identifier>
<identifier> game </identifier>
<symbol> . </symbol>
<symbol> * </symbol>
<symbol> / </symbol>
<keyword> class </keyword>
<identifier> Main </identifier>
<symbol> { </symbol>
<symbol> / </symbol>
<symbol> * </symbol>
<symbol> * </symbol>
<identifier> Initializes </identifier>
<identifier> a </identifier>
<identifier> Pong </identifier>
<identifier> game </identifier>
<identifier> and </identifier>
<identifier> starts </identifier>
<identifier> running </identifier>
<identifier> it </identifier>
<symbol> . </symbol>
<symbol> * </symbol>
<symbol> / </symbol>
<keyword> function </keyword>
<keyword> void </keyword>
<identifier> main </identifier>
<symbol> ( </symbol>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> var </keyword>
<identifier> PongGame </identifier>
<identifier> game </identifier>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> PongGame </identifier>
<symbol> . </symbol>
<identifier> newInstance </identifier>
<symbol> ( </symbol>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> let </keyword>
<identifier> game </identifier>
<symbol> = </symbol>
<identifier> PongGame </identifier>
<symbol> . </symbol>
<identifier> getInstance </identifier>
<symbol> ( </symbol>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> game </identifier>
<symbol> . </symbol>
<identifier> run </identifier>
<symbol> ( </symbol>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> game </identifier>
<symbol> . </symbol>
<identifier> dispose </identifier>
<symbol> ( </symbol>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> return </keyword>
<symbol> ; </symbol>
<symbol> } </symbol>
<symbol> } </symbol>
</tokens>
