@256
D=A
@SP
M=D
@Sys.init.ReturnAddress
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D

@FibonacciElement.Sys.init
0; JMP
(Sys.init.ReturnAddress)
(FibonacciElement.Main.fibonacci)
@0
D=A
@FibonacciElement.Main.fibonacci.End.1
D;JEQ
(FibonacciElement.Main.fibonacci.Loop.1)
@SP
A=M
M=0
@SP
M=M+1
@FibonacciElement.Main.fibonacci.Loop.1
D=D-1
D;JNE
(FibonacciElement.Main.fibonacci.End.1)

@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1

@2
D=A
@SP
A=M
M=D
@SP
M=M+1

@SP
A=M-1
D=M
A=A-1
D=D-M
@IF_TRUE4
D;JGT
D=0
@SP
A=M-1
A=A-1
M=D
@IF_FALSE4
0;JMP
(IF_TRUE4)
D=-1
@SP
A=M-1
A=A-1
M=D
(IF_FALSE4)
@SP
M=M-1

@SP
M=M-1
A=M
D=M
@Main.IF_TRUE
D;JNE

@Main.IF_FALSE
0;JMP

(Main.IF_TRUE)

@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1

@LCL
D=M
@5
A=D-A
D=M
@13
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@LCL
M=M-1
A=M
D=M
@THAT
M=D
@LCL
M=M-1
A=M
D=M
@THIS
M=D
@LCL
M=M-1
A=M
D=M
@ARG
M=D
@LCL
M=M-1
A=M
D=M
@LCL
M=D
@13
A=M
0;JMP


(Main.IF_FALSE)

@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1

@2
D=A
@SP
A=M
M=D
@SP
M=M+1

@SP
A=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1

@FibonacciElement.Main.fibonacci.14.ReturnAddress
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@6
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@FibonacciElement.Main.fibonacci
0;JMP
(FibonacciElement.Main.fibonacci.14.ReturnAddress)


@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1

@1
D=A
@SP
A=M
M=D
@SP
M=M+1

@SP
A=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1

@FibonacciElement.Main.fibonacci.18.ReturnAddress
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@6
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@FibonacciElement.Main.fibonacci
0;JMP
(FibonacciElement.Main.fibonacci.18.ReturnAddress)


@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1

@LCL
D=M
@5
A=D-A
D=M
@13
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@LCL
M=M-1
A=M
D=M
@THAT
M=D
@LCL
M=M-1
A=M
D=M
@THIS
M=D
@LCL
M=M-1
A=M
D=M
@ARG
M=D
@LCL
M=M-1
A=M
D=M
@LCL
M=D
@13
A=M
0;JMP



(FibonacciElement.Sys.init)
@0
D=A
@FibonacciElement.Sys.init.End.1
D;JEQ
(FibonacciElement.Sys.init.Loop.1)
@SP
A=M
M=0
@SP
M=M+1
@FibonacciElement.Sys.init.Loop.1
D=D-1
D;JNE
(FibonacciElement.Sys.init.End.1)

@4
D=A
@SP
A=M
M=D
@SP
M=M+1

@FibonacciElement.Main.fibonacci.3.ReturnAddress
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@6
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@FibonacciElement.Main.fibonacci
0;JMP
(FibonacciElement.Main.fibonacci.3.ReturnAddress)


(Sys.WHILE)

@Sys.WHILE     
0;JMP

@256
D=A
@SP
M=D
@Sys.init.ReturnAddress
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D

@FibonacciElement.Sys.init
0; JMP
(Sys.init.ReturnAddress)
(FibonacciElement.Main.fibonacci)
@0
D=A
@FibonacciElement.Main.fibonacci.End.1
D;JEQ
(FibonacciElement.Main.fibonacci.Loop.1)
@SP
A=M
M=0
@SP
M=M+1
@FibonacciElement.Main.fibonacci.Loop.1
D=D-1
D;JNE
(FibonacciElement.Main.fibonacci.End.1)

@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1

@2
D=A
@SP
A=M
M=D
@SP
M=M+1

@SP
A=M-1
D=M
A=A-1
D=D-M
@IF_TRUE4
D;JGT
D=0
@SP
A=M-1
A=A-1
M=D
@IF_FALSE4
0;JMP
(IF_TRUE4)
D=-1
@SP
A=M-1
A=A-1
M=D
(IF_FALSE4)
@SP
M=M-1

@SP
M=M-1
A=M
D=M
@Main.IF_TRUE
D;JNE

@Main.IF_FALSE
0;JMP

(Main.IF_TRUE          // if n<2, return n)

@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1

@LCL
D=M
@5
A=D-A
D=M
@13
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@LCL
M=M-1
A=M
D=M
@THAT
M=D
@LCL
M=M-1
A=M
D=M
@THIS
M=D
@LCL
M=M-1
A=M
D=M
@ARG
M=D
@LCL
M=M-1
A=M
D=M
@LCL
M=D
@13
A=M
0;JMP


(Main.IF_FALSE         // if n>=2, return fib(n-2)+fib(n-1))

@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1

@2
D=A
@SP
A=M
M=D
@SP
M=M+1

@SP
A=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1

@FibonacciElement.Main.fibonacci.14.ReturnAddress
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@6
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@FibonacciElement.Main.fibonacci
0;JMP
(FibonacciElement.Main.fibonacci.14.ReturnAddress)


@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1

@1
D=A
@SP
A=M
M=D
@SP
M=M+1

@SP
A=M-1
D=M
A=A-1
M=M-D
@SP
M=M-1

@FibonacciElement.Main.fibonacci.18.ReturnAddress
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@6
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@FibonacciElement.Main.fibonacci
0;JMP
(FibonacciElement.Main.fibonacci.18.ReturnAddress)


@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1

@LCL
D=M
@5
A=D-A
D=M
@13
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@LCL
M=M-1
A=M
D=M
@THAT
M=D
@LCL
M=M-1
A=M
D=M
@THIS
M=D
@LCL
M=M-1
A=M
D=M
@ARG
M=D
@LCL
M=M-1
A=M
D=M
@LCL
M=D
@13
A=M
0;JMP


@256
D=A
@SP
M=D
@Sys.init.ReturnAddress
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D

@FibonacciElement.Sys.init
0; JMP
(Sys.init.ReturnAddress)
(FibonacciElement.Sys.init)
@0
D=A
@FibonacciElement.Sys.init.End.1
D;JEQ
(FibonacciElement.Sys.init.Loop.1)
@SP
A=M
M=0
@SP
M=M+1
@FibonacciElement.Sys.init.Loop.1
D=D-1
D;JNE
(FibonacciElement.Sys.init.End.1)

@4
D=A
@SP
A=M
M=D
@SP
M=M+1

@FibonacciElement.Main.fibonacci.3.ReturnAddress
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@6
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@FibonacciElement.Main.fibonacci
0;JMP
(FibonacciElement.Main.fibonacci.3.ReturnAddress)


(Sys.WHILE)

@Sys.WHILE              // Loop infinitely
0;JMP

